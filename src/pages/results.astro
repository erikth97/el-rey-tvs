---
import BaseLayout from '../layout/BaseLayout.astro';
---

<BaseLayout>
    <div id="app" class="flex-1 flex flex-col bg-[#E6E3E1] min-h-screen"></div>

    <script>
      // Componente de resultados
      const ResultsScreen = () => {
        const container = document.createElement('div');
        container.className = 'flex flex-col items-center justify-between h-full py-4 px-4 max-w-md mx-auto';
        
        // Estrellas decorativas
        const starsTop = document.createElement('div');
        starsTop.className = 'w-full flex justify-between mb-2';
        starsTop.innerHTML = `
          <span class="text-[#FF4C4C] text-2xl">★</span>
          <span class="text-[#0047AB] text-xl">★</span>
          <span class="text-[#FF4C4C] text-3xl">★</span>
          <span class="text-[#0047AB] text-2xl">★</span>
        `;
        
        // Título principal
        const title = document.createElement('h1');
        title.className = 'text-3xl mb-4 text-center uppercase';
        title.style.fontFamily = 'Sign Labeling, sans-serif';
        title.style.color = '#0047AB';
        title.innerHTML = '¡TE VES DE<br>CAMPEONATO!';
        title.style.textShadow = '1px 1px 0px #FF4C4C, -1px -1px 0px #FF4C4C';
        
        // Imagen principal del luchador
        const imageCard = document.createElement('div');
        imageCard.className = 'w-full max-w-sm mx-auto rounded-2xl overflow-hidden shadow-xl my-4 relative';
        
        // Usar la imagen de ejemplo o la foto capturada
        const resultImage = document.createElement('img');
        const photo = sessionStorage.getItem('photo');
        
        // Si hay foto, usarla como base para la imagen generada
        if (photo) {
          // En un caso real, aquí se enviaría la foto al servidor para procesarla
          // y recibir la imagen generada. Por ahora usamos una imagen de ejemplo
          resultImage.src = '/assets/images/luchador-result.jpg'; // Imagen de ejemplo
        } else {
          resultImage.src = '/assets/images/luchador-result.jpg'; // Imagen de ejemplo
        }
        
        resultImage.className = 'w-full object-cover rounded-lg';
        resultImage.alt = 'Tu versión luchador';
        imageCard.appendChild(resultImage);
        
        // Botón de descarga
        const downloadBtn = document.createElement('button');
        downloadBtn.className = 'absolute top-2 right-2 bg-white rounded-full p-2';
        downloadBtn.innerHTML = `
          <svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M12 16L7 11H17L12 16Z" fill="#0047AB"/>
            <path d="M12 4V12" stroke="#0047AB" stroke-width="2"/>
            <path d="M4 20H20" stroke="#0047AB" stroke-width="2"/>
          </svg>
        `;
        downloadBtn.onclick = () => {
          // En un caso real, aquí se descargaría la imagen
          alert('Descargando imagen...');
        };
        imageCard.appendChild(downloadBtn);
        
        // Frase motivacional
        const phrase = document.createElement('p');
        phrase.className = 'text-center text-[#0047AB] text-xl uppercase mt-4 mb-6';
        phrase.style.fontFamily = 'Sign Labeling, sans-serif';
        phrase.innerHTML = '¡ESTE SÍ ES DE LOS<br>QUE NO SE RAJAN!';
        
        // Botones de acción
        const actions = document.createElement('div');
        actions.className = 'w-full flex flex-row items-center justify-center space-x-4 mt-4';
        
        // Botón Volver
        const backButton = document.createElement('button');
        backButton.className = 'px-8 py-3 bg-[#0047AB] text-white rounded-full uppercase shadow-md';
        backButton.style.fontFamily = 'Sign Labeling, sans-serif';
        backButton.textContent = 'VA DE NUEZ';
        backButton.onclick = () => {
          window.location.href = '/screens/camera';
        };
        
        // Botón Compartir - ACTUALIZADO CON MODAL
        const shareButton = document.createElement('button');
        shareButton.className = 'px-8 py-3 bg-[#FF4C4C] text-white rounded-full uppercase shadow-md';
        shareButton.style.fontFamily = 'Sign Labeling, sans-serif';
        shareButton.textContent = 'COMPARTIR';
        shareButton.onclick = () => {
          // Abrir modal de compartir
          openShareModal(resultImage.src, '¡Te ves de campeonato!');
        };
        
        actions.appendChild(backButton);
        actions.appendChild(shareButton);
        
        // Ensamblar todo
        container.appendChild(starsTop);
        container.appendChild(title);
        container.appendChild(imageCard);
        container.appendChild(phrase);
        container.appendChild(actions);
        
        return container;
      };

      // Función para abrir el modal de compartir
      function openShareModal(imageUrl: string, title: string) {
        // Crear el modal usando JavaScript vanilla
        const modalOverlay = document.createElement('div');
        modalOverlay.className = 'fixed inset-0 z-50 flex items-end sm:items-center justify-center bg-black bg-opacity-60 transition-opacity duration-300 opacity-100 pointer-events-auto';
        modalOverlay.id = 'share-modal-overlay';
        
        const modalContent = document.createElement('div');
        modalContent.className = 'bg-white w-full transform transition-all duration-300 ease-out translate-y-0 opacity-100 sm:max-w-md sm:rounded-xl shadow-xl';
        
        // Obtener URL compartible
        const getShareableUrl = (url: string) => {
          if (url.includes('drive.google.com')) {
            const fileIdMatch = url.match(/\/d\/([^\/?]+)/);
            if (fileIdMatch && fileIdMatch[1]) {
              return `https://drive.google.com/file/d/${fileIdMatch[1]}/view`;
            }
          }
          return url;
        };
        
        const shareableUrl = getShareableUrl(imageUrl);
        
        modalContent.innerHTML = `
          <div class="flex justify-between items-center p-4 pt-5 sm:p-6">
            <h2 class="text-lg font-bold text-[#0047AB]" style="font-family: Sign Labeling, sans-serif;">COMPARTIR</h2>
            <button id="close-modal" class="text-gray-400 hover:text-gray-600 w-8 h-8 flex items-center justify-center rounded-full hover:bg-gray-100 transition-colors">
              <svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><line x1="18" y1="6" x2="6" y2="18"></line><line x1="6" y1="6" x2="18" y2="18"></line></svg>
            </button>
          </div>
          
          <div id="feedback-container"></div>
          
          <div class="p-4 sm:px-6 pt-2 pb-4">
            <div class="flex justify-around items-start flex-wrap gap-y-4">
              <button data-platform="facebook" class="flex flex-col items-center justify-start space-y-2 w-[calc(25%-12px)] sm:w-[calc(25%-16px)] group text-center focus:outline-none">
                <div class="w-14 h-14 sm:w-16 sm:h-16 rounded-full flex items-center justify-center bg-blue-50 group-hover:bg-blue-100 transition-all duration-150">
                  <svg viewBox="0 0 24 24" class="w-7 h-7 sm:w-8 sm:h-8">
                    <path fill="#1877F2" d="M12 2C6.477 2 2 6.477 2 12c0 4.991 3.657 9.128 8.438 9.879V14.89h-2.54V12h2.54V9.797c0-2.506 1.492-3.89 3.777-3.89 1.094 0 2.238.195 2.238.195v2.46h-1.26c-1.243 0-1.63.771-1.63 1.562V12h2.773l-.443 2.89h-2.33v6.989C18.343 21.129 22 16.99 22 12c0-5.523-4.477-10-10-10z"/>
                  </svg>
                </div>
                <span class="text-xs text-gray-600 group-hover:text-gray-800 transition-colors font-medium">Facebook</span>
              </button>
              
              <button data-platform="instagram" class="flex flex-col items-center justify-start space-y-2 w-[calc(25%-12px)] sm:w-[calc(25%-16px)] group text-center focus:outline-none">
                <div class="w-14 h-14 sm:w-16 sm:h-16 rounded-full flex items-center justify-center bg-pink-50 group-hover:bg-pink-100 transition-all duration-150">
                  <svg viewBox="0 0 24 24" class="w-7 h-7 sm:w-8 sm:h-8">
                    <defs>
                      <linearGradient id="insta-gradient" x1="0%" y1="0%" x2="100%" y2="100%">
                        <stop offset="0%" stop-color="#F9CE34"/>
                        <stop offset="33%" stop-color="#EE2A7B"/>
                        <stop offset="66%" stop-color="#6228D7"/>
                        <stop offset="100%" stop-color="#4C64D3"/>
                      </linearGradient>
                    </defs>
                    <path fill="url(#insta-gradient)" d="M12 7.38c-2.55 0-4.62 2.07-4.62 4.62S9.45 16.62 12 16.62s4.62-2.07 4.62-4.62S14.55 7.38 12 7.38zm0 7.62c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z"/>
                    <circle fill="url(#insta-gradient)" cx="16.8" cy="7.2" r="1.08"/>
                    <path fill="url(#insta-gradient)" d="M17.88 2H6.12C3.86 2 2 3.86 2 6.12v11.76C2 20.14 3.86 22 6.12 22h11.76c2.26 0 4.12-1.86 4.12-4.12V6.12C22 3.86 20.14 2 17.88 2zm0 16.88c0 1.2-.98 2.18-2.18 2.18H6.12c-1.2 0-2.18-.98-2.18-2.18V6.12c0-1.2.98-2.18 2.18-2.18h11.76c1.2 0 2.18.98 2.18 2.18v11.76z"/>
                  </svg>
                </div>
                <span class="text-xs text-gray-600 group-hover:text-gray-800 transition-colors font-medium">Instagram</span>
              </button>
              
              <button data-platform="whatsapp" class="flex flex-col items-center justify-start space-y-2 w-[calc(25%-12px)] sm:w-[calc(25%-16px)] group text-center focus:outline-none">
                <div class="w-14 h-14 sm:w-16 sm:h-16 rounded-full flex items-center justify-center bg-green-50 group-hover:bg-green-100 transition-all duration-150">
                  <svg viewBox="0 0 24 24" class="w-7 h-7 sm:w-8 sm:h-8">
                    <path fill="#25D366" d="M17.6 6.32A8.78 8.78 0 0 0 12.48 4c-4.77 0-8.65 3.77-8.65 8.42 0 1.49.4 2.94 1.15 4.22L3.59 20l3.56-1.14a8.9 8.9 0 0 0 5.33 1.68h.01c4.77 0 8.65-3.77 8.65-8.42 0-2.25-.9-4.37-2.54-5.8zm-5.12 12.97h-.01a7.4 7.4 0 0 1-3.73-1l-.27-.16-2.77.89.91-2.59-.17-.28a7.4 7.4 0 0 1-1.2-3.93c0-3.96 3.3-7.18 7.37-7.18a7.3 7.3 0 0 1 5.19 2.14A7.28 7.28 0 0 1 19.9 12.2c0 3.96-3.3 7.1-7.42 7.1z"/>
                    <path fill="#25D366" d="M15.56 13.46c-.18-.09-1.05-.51-1.22-.57-.16-.06-.28-.09-.4.09-.12.18-.46.57-.56.69-.1.12-.21.13-.38.05-.18-.09-.75-.28-1.43-.88a5.42 5.42 0 0 1-.99-1.2c-.1-.18-.01-.28.08-.37.08-.08.18-.21.27-.31.09-.1.12-.18.18-.3.06-.12.03-.22-.03-.3-.06-.09-.4-.94-.54-1.28-.14-.33-.29-.29-.4-.29-.1 0-.21-.02-.33-.02-.12 0-.31.04-.47.22-.16.18-.6.58-.6 1.42s.62 1.65.7 1.77c.09.1 1.24 1.82 3.05 2.49.43.18.76.29 1.02.37.43.14.82.12 1.13.07.34-.05 1.05-.42 1.2-.82.15-.41.15-.76.1-.83-.05-.08-.18-.13-.36-.22z"/>
                  </svg>
                </div>
                <span class="text-xs text-gray-600 group-hover:text-gray-800 transition-colors font-medium">WhatsApp</span>
              </button>
              
              <button data-platform="more" class="flex flex-col items-center justify-start space-y-2 w-[calc(25%-12px)] sm:w-[calc(25%-16px)] group text-center focus:outline-none">
                <div class="w-14 h-14 sm:w-16 sm:h-16 rounded-full flex items-center justify-center bg-gray-50 group-hover:bg-gray-100 transition-all duration-150">
                  <svg viewBox="0 0 24 24" class="w-7 h-7 sm:w-8 sm:h-8">
                    <path fill="#4A4A4A" d="M13 10V3a1 1 0 0 0-2 0v7H4a1 1 0 1 0 0 2h7v7a1 1 0 0 0 2 0v-7h7a1 1 0 0 0 0-2h-7z"/>
                  </svg>
                </div>
                <span class="text-xs text-gray-600 group-hover:text-gray-800 transition-colors font-medium">Más</span>
              </button>
            </div>
          </div>
          
          <div class="p-4 sm:px-6 pb-6 pt-3">
            <p class="text-left text-xs text-gray-500 mb-2 ml-1 font-medium">Enlace de tu imagen</p>
            <div class="flex items-center bg-gray-100 rounded-lg p-1 h-12">
              <input id="share-url" type="text" readonly value="${shareableUrl}" class="flex-grow bg-transparent text-sm text-gray-700 px-3 focus:outline-none truncate">
              <button id="copy-link" class="p-2 h-10 w-10 flex items-center justify-center rounded-md text-gray-500 hover:bg-gray-200 hover:text-gray-700 transition-colors">
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect>
                  <path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path>
                </svg>
              </button>
            </div>
          </div>
        `;
        
        modalOverlay.appendChild(modalContent);
        document.body.appendChild(modalOverlay);
        
        // Función para mostrar feedback
        const showFeedback = (message: string, isSuccess: boolean) => {
          const feedbackContainer = document.getElementById('feedback-container');
          if (feedbackContainer) {
            feedbackContainer.innerHTML = `
              <div class="mx-4 mb-1 p-3 rounded-lg text-sm text-center transition-all duration-300 ${
                isSuccess ? 'bg-green-50 text-green-700' : 'bg-red-50 text-red-700'
              }">
                ${message}
              </div>
            `;
            
            setTimeout(() => {
              feedbackContainer.innerHTML = '';
            }, 2000);
          }
        };
        
        // Función para cerrar modal
        const closeModal = () => {
          document.body.removeChild(modalOverlay);
        };
        
        // Event listeners
        document.getElementById('close-modal')?.addEventListener('click', closeModal);
        
        // Click outside to close
        modalOverlay.addEventListener('click', (e) => {
          if (e.target === modalOverlay) {
            closeModal();
          }
        });
        
        // Share buttons
        document.querySelectorAll('[data-platform]').forEach(button => {
          button.addEventListener('click', async (e) => {
            const platform = (e.currentTarget as HTMLElement).getAttribute('data-platform');
            const shareText = `¡Te ves de campeonato! Mira mi resultado de #ElReyTVS 🏆`;
            
            switch(platform) {
              case 'facebook':
                window.open(`https://www.facebook.com/sharer/sharer.php?u=${encodeURIComponent(shareableUrl)}`, '_blank', 'noopener,noreferrer');
                showFeedback('Abriendo Facebook para compartir...', true);
                setTimeout(closeModal, 1500);
                break;
                
              case 'instagram':
                window.open('https://www.instagram.com/', '_blank', 'noopener,noreferrer');
                showFeedback('Abre Instagram y crea tu historia.', true);
                setTimeout(closeModal, 2000);
                break;
                
              case 'whatsapp':
                window.open(`https://wa.me/?text=${encodeURIComponent(shareText + ' ' + shareableUrl)}`, '_blank', 'noopener,noreferrer');
                showFeedback('Abriendo WhatsApp...', true);
                setTimeout(closeModal, 1500);
                break;
                
              case 'more':
                if (navigator.share) {
                  try {
                    await navigator.share({
                      title: title,
                      text: shareText,
                      url: shareableUrl,
                    });
                    showFeedback('¡Compartido exitosamente!', true);
                    setTimeout(closeModal, 1500);
                  } catch (err: any) {
                    if (err.name !== 'AbortError') {
                      showFeedback('No se pudo compartir.', false);
                    }
                  }
                } else {
                  showFeedback('Tu navegador no soporta esta función.', false);
                }
                break;
            }
          });
        });
        
        // Copy link button
        document.getElementById('copy-link')?.addEventListener('click', async () => {
          try {
            await navigator.clipboard.writeText(shareableUrl);
            showFeedback('¡Enlace copiado al portapapeles!', true);
          } catch (err) {
            showFeedback('No se pudo copiar.', false);
          }
        });
        
        // Select input on click
        document.getElementById('share-url')?.addEventListener('click', (e) => {
          (e.target as HTMLInputElement).select();
        });
      }

      // Inicializar la pantalla de resultados
      const resultsScreen = ResultsScreen();
      const appElement = document.getElementById('app');
      if (appElement) {
        appElement.appendChild(resultsScreen);
      }
    </script>
</BaseLayout>