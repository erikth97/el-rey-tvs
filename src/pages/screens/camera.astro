---
// src/pages/camera.astro
---

<html lang="es">
<head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="description" content="Captura tu documento con la cámara" />
    <title>Captura de Documento - Document AI</title>
</head>
<body class="bg-gradient-to-br from-blue-50 to-indigo-100 min-h-screen">
    <div class="container mx-auto px-4 py-8 max-w-4xl">
        <!-- Progress Bar -->
        <div class="mb-8">
            <div class="flex items-center justify-center mb-4">
                <div class="flex items-center space-x-4">
                    <div class="w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-semibold">1</div>
                    <div class="w-16 h-1 bg-blue-500 rounded"></div>
                    <div class="w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-semibold">2</div>
                    <div class="w-16 h-1 bg-blue-500 rounded"></div>
                    <div class="w-8 h-8 bg-blue-500 text-white rounded-full flex items-center justify-center text-sm font-semibold">3</div>
                    <div class="w-16 h-1 bg-gray-300 rounded"></div>
                    <div class="w-8 h-8 bg-gray-300 text-gray-500 rounded-full flex items-center justify-center text-sm font-semibold">4</div>
                </div>
            </div>
            <p class="text-center text-gray-600 text-sm">Paso 3 de 4: Captura tu documento</p>
        </div>

        <!-- Header -->
        <div class="text-center mb-8">
            <h1 class="text-3xl md:text-4xl font-bold text-gray-800 mb-4">
                Captura tu documento
            </h1>
            <p class="text-gray-600" id="documentTypeDisplay">
                Toma una foto clara de tu documento
            </p>
        </div>

        <!-- Camera Container -->
        <div class="bg-white rounded-xl p-6 shadow-lg mb-8">
            <!-- Camera Preview Area -->
            <div class="relative mx-auto mb-6" style="max-width: 400px;">
                <div class="aspect-square bg-gray-100 rounded-lg overflow-hidden relative">
                    <!-- Video Preview -->
                    <video 
                        id="cameraVideo" 
                        class="w-full h-full object-cover hidden"
                        autoplay 
                        muted 
                        playsinline
                    ></video>
                    
                    <!-- Placeholder when camera is not active -->
                    <div id="cameraPlaceholder" class="w-full h-full flex flex-col items-center justify-center text-gray-500">
                        <svg class="w-16 h-16 mb-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        </svg>
                        <p class="text-center">
                            <span class="block font-medium">Activa tu cámara</span>
                            <span class="text-sm">Presiona "Activar Cámara" para comenzar</span>
                        </p>
                    </div>

                    <!-- Preview overlay for framing -->
                    <div id="cameraOverlay" class="absolute inset-0 pointer-events-none hidden">
                        <div class="w-full h-full border-2 border-dashed border-blue-500 rounded-lg flex items-center justify-center">
                            <div class="bg-black bg-opacity-50 text-white px-3 py-1 rounded text-sm">
                                Coloca el documento dentro del marco
                            </div>
                        </div>
                    </div>

                    <!-- Captured Image Preview -->
                    <img id="capturedPreview" class="w-full h-full object-cover hidden" alt="Imagen capturada" />
                </div>

                <!-- Camera Controls -->
                <div class="flex justify-center space-x-4 mt-4">
                    <!-- Activate Camera Button -->
                    <button 
                        id="activateCameraBtn"
                        class="bg-blue-500 hover:bg-blue-600 text-white font-medium py-3 px-6 rounded-lg transition-colors"
                    >
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                        </svg>
                        Activar Cámara
                    </button>

                    <!-- Capture Button -->
                    <button 
                        id="captureBtn"
                        class="bg-green-500 hover:bg-green-600 text-white font-medium py-3 px-6 rounded-lg transition-colors hidden"
                    >
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 9a2 2 0 012-2h.93a2 2 0 001.664-.89l.812-1.22A2 2 0 0110.07 4h3.86a2 2 0 011.664.89l.812 1.22A2 2 0 0018.07 7H19a2 2 0 012 2v9a2 2 0 01-2 2H5a2 2 0 01-2-2V9z"></path>
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 13a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        </svg>
                        Capturar
                    </button>

                    <!-- Retake Button -->
                    <button 
                        id="retakeBtn"
                        class="bg-orange-500 hover:bg-orange-600 text-white font-medium py-3 px-6 rounded-lg transition-colors hidden"
                    >
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"></path>
                        </svg>
                        Repetir
                    </button>
                </div>
            </div>

            <!-- Upload Alternative -->
            <div class="text-center">
                <div class="border-t border-gray-200 pt-6 mb-4">
                    <p class="text-gray-600 mb-4">¿No puedes usar la cámara?</p>
                    <label for="fileUpload" class="cursor-pointer bg-gray-100 hover:bg-gray-200 text-gray-700 font-medium py-3 px-6 rounded-lg transition-colors inline-flex items-center">
                        <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                        </svg>
                        Subir desde galería
                    </label>
                    <input 
                        type="file" 
                        id="fileUpload" 
                        accept="image/*" 
                        class="hidden"
                    />
                </div>
            </div>
        </div>

        <!-- Instructions -->
        <div class="bg-blue-50 border border-blue-200 rounded-xl p-6 mb-8">
            <h3 class="font-semibold text-blue-800 mb-3 flex items-center">
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z"></path>
                </svg>
                Consejos para una mejor captura
            </h3>
            <div class="grid md:grid-cols-2 gap-4 text-sm">
                <div>
                    <h4 class="font-medium text-blue-800 mb-2">✅ Recomendaciones:</h4>
                    <ul class="text-blue-700 space-y-1">
                        <li>• Buena iluminación uniforme</li>
                        <li>• Documento completamente visible</li>
                        <li>• Superficie plana y estable</li>
                        <li>• Evitar sombras y reflejos</li>
                        <li>• Enfocar bien el texto</li>
                    </ul>
                </div>
                <div>
                    <h4 class="font-medium text-blue-800 mb-2">📱 Formatos aceptados:</h4>
                    <ul class="text-blue-700 space-y-1">
                        <li>• JPG, JPEG</li>
                        <li>• PNG</li>
                        <li>• Máximo 5MB</li>
                        <li>• Resolución mínima: 800x600</li>
                    </ul>
                </div>
            </div>
        </div>

        <!-- Navigation -->
        <div class="flex justify-between items-center">
            <button 
                id="backButton"
                class="flex items-center text-gray-600 hover:text-gray-800 transition-colors"
                data-nav-back
            >
                <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
                </svg>
                Volver
            </button>
            
            <button 
                id="continueButton"
                class="bg-gradient-to-r from-blue-500 to-indigo-600 hover:from-blue-600 hover:to-indigo-700 text-white font-semibold py-3 px-6 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300 disabled:opacity-50 disabled:cursor-not-allowed"
                disabled
            >
                Procesar Documento
                <svg class="w-5 h-5 ml-2 inline" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6"></path>
                </svg>
            </button>
        </div>
    </div>

    <!-- Hidden canvas for image capture -->
    <canvas id="captureCanvas" style="display: none;"></canvas>

    <script type="module">
        // Importar sistemas de navegación y storage
        import { navigationManager, setNavigationData, getNavigationData } from '/src/utils/helpers/navigation.js';
        import { storage, saveCapturedImage } from '/src/utils/helpers/storage.js';

        document.addEventListener('DOMContentLoaded', function() {
            // Elementos del DOM
            const cameraVideo = document.getElementById('cameraVideo');
            const cameraPlaceholder = document.getElementById('cameraPlaceholder');
            const cameraOverlay = document.getElementById('cameraOverlay');
            const capturedPreview = document.getElementById('capturedPreview');
            const captureCanvas = document.getElementById('captureCanvas');
            
            const activateCameraBtn = document.getElementById('activateCameraBtn');
            const captureBtn = document.getElementById('captureBtn');
            const retakeBtn = document.getElementById('retakeBtn');
            const continueButton = document.getElementById('continueButton');
            const fileUpload = document.getElementById('fileUpload');
            const documentTypeDisplay = document.getElementById('documentTypeDisplay');

            // Estado de la cámara
            let stream = null;
            let capturedImageData = null;

            // Mostrar tipo de documento seleccionado
            const documentType = getNavigationData('selectedDocumentType');
            if (documentType) {
                const typeNames = {
                    'id': 'identificación',
                    'invoice': 'factura',
                    'receipt': 'recibo',
                    'document': 'documento'
                };
                documentTypeDisplay.textContent = `Toma una foto clara de tu ${typeNames[documentType] || 'documento'}`;
            }

            // Activar cámara
            activateCameraBtn.addEventListener('click', async function() {
                try {
                    this.disabled = true;
                    this.innerHTML = 'Iniciando cámara...';

                    stream = await navigator.mediaDevices.getUserMedia({
                        video: {
                            facingMode: 'environment', // Cámara trasera preferida
                            width: { ideal: 1280 },
                            height: { ideal: 720 }
                        }
                    });

                    cameraVideo.srcObject = stream;
                    
                    // Mostrar video y ocultar placeholder
                    cameraPlaceholder.classList.add('hidden');
                    cameraVideo.classList.remove('hidden');
                    cameraOverlay.classList.remove('hidden');
                    
                    // Mostrar botón de captura
                    this.classList.add('hidden');
                    captureBtn.classList.remove('hidden');

                    console.log('📷 Cámara activada exitosamente');

                } catch (error) {
                    console.error('❌ Error al acceder a la cámara:', error);
                    
                    let errorMessage = 'No se pudo acceder a la cámara. ';
                    if (error.name === 'NotAllowedError') {
                        errorMessage += 'Por favor, permite el acceso a la cámara.';
                    } else if (error.name === 'NotFoundError') {
                        errorMessage += 'No se encontró ninguna cámara.';
                    } else {
                        errorMessage += 'Intenta subir una imagen desde tu galería.';
                    }

                    alert(errorMessage);
                    
                    // Restaurar estado del botón
                    this.disabled = false;
                    this.innerHTML = `
                        <svg class="w-5 h-5 inline mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 10l4.553-2.276A1 1 0 0121 8.618v6.764a1 1 0 01-1.447.894L15 14M5 18h8a2 2 0 002-2V8a2 2 0 00-2-2H5a2 2 0 00-2 2v8a2 2 0 002 2z"></path>
                        </svg>
                        Activar Cámara
                    `;
                }
            });

            // Capturar imagen
            captureBtn.addEventListener('click', function() {
                if (!stream) return;

                try {
                    // Configurar canvas
                    const context = captureCanvas.getContext('2d');
                    captureCanvas.width = cameraVideo.videoWidth;
                    captureCanvas.height = cameraVideo.videoHeight;

                    // Dibujar frame actual del video
                    context.drawImage(cameraVideo, 0, 0);

                    // Obtener imagen como data URL
                    const dataUrl = captureCanvas.toDataURL('image/jpeg', 0.8);
                    
                    // Preparar datos de la imagen
                    capturedImageData = {
                        dataUrl: dataUrl,
                        originalDimensions: {
                            width: captureCanvas.width,
                            height: captureCanvas.height
                        },
                        captureTimestamp: Date.now(),
                        fileSize: Math.round((dataUrl.length * 3) / 4), // Aproximación del tamaño
                        quality: 0.8
                    };

                    // Mostrar preview
                    capturedPreview.src = dataUrl;
                    capturedPreview.classList.remove('hidden');
                    cameraVideo.classList.add('hidden');
                    cameraOverlay.classList.add('hidden');

                    // Cambiar botones
                    captureBtn.classList.add('hidden');
                    retakeBtn.classList.remove('hidden');
                    continueButton.disabled = false;

                    // Detener cámara
                    stopCamera();

                    console.log('📷 Imagen capturada exitosamente');

                } catch (error) {
                    console.error('❌ Error al capturar imagen:', error);
                    alert('Error al capturar la imagen. Inténtalo de nuevo.');
                }
            });

            // Repetir captura
            retakeBtn.addEventListener('click', function() {
                // Limpiar imagen capturada
                capturedImageData = null;
                capturedPreview.classList.add('hidden');
                capturedPreview.src = '';
                
                // Mostrar botón de activar cámara
                retakeBtn.classList.add('hidden');
                activateCameraBtn.classList.remove('hidden');
                activateCameraBtn.disabled = false;
                
                // Restaurar placeholder
                cameraPlaceholder.classList.remove('hidden');
                
                // Deshabilitar continuar
                continueButton.disabled = true;
                
                console.log('🔄 Preparando para nueva captura');
            });

            // Upload desde archivo
            fileUpload.addEventListener('change', function(e) {
                const file = e.target.files[0];
                if (!file) return;

                // Validar tipo de archivo
                if (!file.type.startsWith('image/')) {
                    alert('Por favor selecciona un archivo de imagen válido.');
                    return;
                }

                // Validar tamaño (5MB máximo)
                if (file.size > 5 * 1024 * 1024) {
                    alert('La imagen es muy grande. Por favor selecciona una imagen menor a 5MB.');
                    return;
                }

                const reader = new FileReader();
                reader.onload = function(e) {
                    const dataUrl = e.target.result;
                    
                    // Crear imagen para obtener dimensiones
                    const img = new Image();
                    img.onload = function() {
                        capturedImageData = {
                            dataUrl: dataUrl,
                            originalDimensions: {
                                width: img.width,
                                height: img.height
                            },
                            captureTimestamp: Date.now(),
                            fileSize: file.size,
                            quality: 1.0
                        };

                        // Mostrar preview
                        capturedPreview.src = dataUrl;
                        capturedPreview.classList.remove('hidden');
                        cameraPlaceholder.classList.add('hidden');
                        
                        // Ocultar botones de cámara
                        activateCameraBtn.classList.add('hidden');
                        captureBtn.classList.add('hidden');
                        retakeBtn.classList.remove('hidden');
                        
                        // Habilitar continuar
                        continueButton.disabled = false;
                        
                        console.log('📁 Imagen cargada desde archivo');
                    };
                    img.src = dataUrl;
                };
                reader.readAsDataURL(file);
            });

            // Continuar al siguiente paso
            continueButton.addEventListener('click', function() {
                if (!capturedImageData) {
                    alert('Por favor captura o sube una imagen primero.');
                    return;
                }

                try {
                    // Guardar imagen en storage
                    const saved = saveCapturedImage(capturedImageData);
                    if (!saved) {
                        throw new Error('No se pudo guardar la imagen');
                    }

                    // Guardar en datos de navegación
                    setNavigationData('capturedImage', capturedImageData.dataUrl);

                    // Navegar a loading
                    window.location.href = '/loading';

                } catch (error) {
                    console.error('❌ Error al procesar imagen:', error);
                    alert('Error al procesar la imagen. Inténtalo de nuevo.');
                }
            });

            // Función para detener la cámara
            function stopCamera() {
                if (stream) {
                    stream.getTracks().forEach(track => track.stop());
                    stream = null;
                }
            }

            // Limpiar al salir de la página
            window.addEventListener('beforeunload', stopCamera);

            // Verificar si ya hay una imagen capturada
            const existingImage = storage.getCapturedImageUrl();
            if (existingImage) {
                capturedPreview.src = existingImage;
                capturedPreview.classList.remove('hidden');
                cameraPlaceholder.classList.add('hidden');
                activateCameraBtn.classList.add('hidden');
                retakeBtn.classList.remove('hidden');
                continueButton.disabled = false;
                console.log('🔄 Imagen existente cargada');
            }

            console.log('📷 Camera page initialized');
        });
    </script>
</body>
</html>